# Queue Implementation Using Arrays

## Overview

This document describes a basic queue implementation using arrays in Java. The queue supports basic operations such as enqueue (adding elements) and dequeue (removing elements). Additionally, the document discusses the time complexity for these operations in both a standard queue and a max priority queue.

## Queue Implementation

### 1. Basic Queue

The basic queue implementation uses a fixed-size array to store elements. It supports the following operations:

- **Enqueue**: Adds an element to the rear of the queue.
- **Dequeue**: Removes an element from the front of the queue.

#### Time Complexity

- **Enqueue**: O(1)  
  Enqueue operations are constant time, assuming no resizing of the underlying array.

- **Dequeue**: O(n)  
  Dequeue operations are linear time because elements need to be shifted to fill the gap left by the removed element.

### 2. Max Priority Queue

The max priority queue implementation also uses an array to store elements but maintains the highest priority element at the front.

#### Time Complexity

- **Enqueue**: O(n)  
  Enqueue operations are linear time as elements may need to be shifted to maintain the order based on priority.

- **Dequeue**: O(1)  
  Dequeue operations are constant time as the highest priority element is always at the front.
